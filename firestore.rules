service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Helper functions
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    function isDesigner() {
      return request.auth != null && userData().role == 'designer';
    }

    function isManager() {
      return request.auth != null && (
        request.auth.token.manager == true ||
        userData().role == 'manager' ||
        userData().role == 'project-manager' ||
        userData().role == 'ops'
      );
    }

    function isEditor() {
      return request.auth != null && userData().role == 'editor';
    }

    function isClient() {
      return request.auth != null && userData().role == 'client';
    }

    function userData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isPublicReviewer() {
      return request.auth == null ||
             request.auth.token.firebase.sign_in_provider == 'anonymous';
    }

    function isReviewFlowUpdate() {
      return isPublicReviewer() &&
             request.resource.data.diff(resource.data).affectedKeys()
               .hasOnly([
                 'status',
                 'lockedBy',
                 'lockedByUid',
                 'reviewProgress',
                 'reviewComment',
                 'lastReviewedAt'
               ]);
    }

    // ✅ Global Settings
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /siteSettings/{docId}/subscriptionPlans/{planId} {
      allow read, write: if isAdmin();
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isManager();
      allow read, write: if isAdmin();
    }

    match /agencies/{agencyId} {
      allow read: if true;
      allow write: if isAdmin() || (request.auth != null && userData().agencyId == agencyId);
    }

    match /brands/{brandId} {
      allow read: if true;
      allow update: if isAdmin() || isManager() || isEditor() ||
        (isClient() &&
         userData().brandCodes != null &&
         userData().brandCodes.hasAny([resource.data.code]) &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['products'])
        );
      allow delete: if isAdmin();
      allow create: if isAdmin();
    }

    match /brands/{brandId}/assets/{assetId} {
      allow read: if request.auth != null;
    }

    match /componentInstances/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /csvImportTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ✅ Ad Groups and Subcollections
    match /adGroups/{groupId} {
      allow read: if (
        resource.data.visibility == "public" && !resource.data.requireAuth
      ) || isAdmin() || userData().role != 'designer' || (
        request.auth != null &&
        userData().role == 'designer' &&
        resource.data.designerId == request.auth.uid
      );

      allow create: if request.auth != null;
      allow update: if isAdmin() || isManager() || (request.auth != null && resource.data.uploadedBy == request.auth.uid);
      allow delete: if isAdmin();

      match /assets/{assetId} {
        allow read, write: if request.auth != null;
      }

      match /{document=**} {
        allow read: if (
          get(/databases/$(database)/documents/adGroups/$(groupId)).data.visibility == "public" &&
          !get(/databases/$(database)/documents/adGroups/$(groupId)).data.requireAuth
        ) || isAdmin() || userData().role != 'designer' || (
          request.auth != null &&
          userData().role == 'designer' &&
          get(/databases/$(database)/documents/adGroups/$(groupId)).data.designerId == request.auth.uid
        );
        allow write: if request.auth != null;
      }
    }

    match /recipeTypes/{docId} {
      allow read: if isAdmin() || isManager() || isEditor() || isDesigner() || resource.data.external == true;
      allow write: if isAdmin();
    }

    match /componentTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /adAssets/{assetId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // ✅ Reviews
    match /reviews/{reviewId} {
      allow read: if false;
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    match /recipes/{id} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // ✅ Collection group rule for any 'assets' subcollection
    match /{path=**} {
      match /assets/{assetId} {
        allow get, list: if
          request.auth != null && (
            // Allow internal roles to read any asset
            isAdmin() || isManager() || isEditor() || isDesigner() ||
            // Clients can only read approved assets for their brands
            (isClient() &&
              userData().brandCodes != null &&
              userData().brandCodes.hasAny([resource.data.brandCode]) &&
              resource.data.status == 'approved')
          );
      }
    }

    match /notifications/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /notificationRules/{docId} {
      allow read, write: if isAdmin();
    }

    match /taggerJobs/{jobId} {
      allow read, write: if request.auth != null;
    }

    match /copyRecipeTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin() || isManager();
    }

    match /projects/{projectId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /requests/{docId} {
      allow create: if request.auth != null && request.resource.data.createdBy == request.auth.uid;

      allow read, update: if isAdmin() || isManager() || isEditor() ||
        (request.auth != null && resource.data.createdBy == request.auth.uid);

      allow delete: if isAdmin() || isManager() || isEditor();
    }

    match /creditLogs/{logId} {
      allow create: if request.auth != null;
      allow read: if isAdmin();
    }

    match /designers/{docId} {
      allow read: if isAdmin() || isManager();
    }
  }
}
