service cloud.firestore {
  match /databases/{database}/documents {

    // âœ… Helper functions
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }
    
     function isDesigner() {
      return request.auth != null && userData().role == 'designer';
    }
    
    function isManager() {
      return request.auth != null && request.auth.token.manager == true;
    }

    function userData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // ðŸ”‘ Allow anonymous or signed-in anonymous users to submit reviews
    function isPublicReviewer() {
      return request.auth == null ||
             request.auth.token.firebase.sign_in_provider == 'anonymous';
    }

    // âœ… Anonymous users can only update review flowâ€“specific fields
    function isReviewFlowUpdate() {
      return isPublicReviewer() &&
             request.resource.data.diff(resource.data).affectedKeys()
               .hasOnly([
                 'status',
                 'lockedBy',
                 'lockedByUid',
                 'reviewProgress',
                 'reviewComment',
                 'lastReviewedAt'
               ]);
    }

    // âœ… Global settings
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

  	match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isManager();
      allow read, write: if isAdmin();
  }

    match /agencies/{agencyId} {
      allow read: if true;
      allow write: if isAdmin() || (request.auth != null && userData().agencyId == agencyId);
    }

    match /brands/{brandId} {
      allow read: if true;
      allow update: if isAdmin() || isManager();
      allow delete: if isAdmin();
      allow create: if isAdmin();
    }

    match /componentInstances/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /csvImportTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // âœ… Updated adGroups rules
    match /adGroups/{groupId} {
      allow read: if (resource.data.visibility == "public" && !resource.data.requireAuth) ||
        isAdmin() || userData().role != 'designer' ||
        (request.auth != null && userData().role == 'designer' && resource.data.designerId == request.auth.uid);
      allow create: if request.auth != null;
      allow update: if isAdmin() || isManager() || (request.auth != null && resource.data.uploadedBy == request.auth.uid);
      allow delete: if isAdmin();

      match /{document=**} {
        allow read: if (get(/databases/$(database)/documents/adGroups/$(groupId)).data.visibility == "public" &&
                       !get(/databases/$(database)/documents/adGroups/$(groupId)).data.requireAuth) ||
          isAdmin() || userData().role != 'designer' ||
          (request.auth != null && userData().role == 'designer' && get(/databases/$(database)/documents/adGroups/$(groupId)).data.designerId == request.auth.uid);
        allow write: if request.auth != null;
      }
    }

    match /recipeTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /componentTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /adAssets/{assetId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // âœ… Reviews â€” public create, admin edit
    match /reviews/{reviewId} {
      allow read: if false;
      allow create: if true;
      allow update, delete: if isAdmin();
    }
    match /recipes/{id} {
      allow read: if true;
      allow write: if request.auth != null;
		}
		match /{document=**}/assets/{assetId} {
  		allow read: if request.auth != null;
		}
    match /adGroups/{groupId}/assets/{assetId} {
  		allow read: if request.auth != null;
		}
    match /assets/{assetId} {
  		allow read: if request.auth != null;
		}
    match /notifications/{docId} {
  		allow read: if request.auth != null;
      allow write: if isAdmin();
    }
		match /componentTypes/{docId} {
  		allow read: if true;
  		allow write: if isAdmin();
		}
    match /notificationRules/{docId} {
  		allow read, write: if isAdmin();
		}
    
    match /taggerJobs/{jobId} {
  		allow read, write: if request.auth != null;
		}
    match /copyRecipeTypes/{docId} {
      allow read: if true;
      allow write: if isAdmin() || isManager();
    }
    
    match /requests/{docId} {
      allow read, write: if isAdmin() || isManager();
    }
    
    match /requests/{document=**} {
  		allow read, write: if isAdmin() || isManager();
}

		match /designers/{docId} {
  		allow read: if isAdmin() || isManager();
		}
	}
}
